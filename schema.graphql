# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type AuthPayload {
  token: AuthToken!
  user: User!
}

type AuthToken {
  expiresIn: Int!
  accessToken: String!
}

type Dashboard {
  projectsSuccess: [ProjectSuccess!]
  recentTests: [RecentTest!]
  testStatistics: TestStatistic!
}

type Mutation {
  login(password: String!, email: String!): AuthPayload!
  signup(password: String!, email: String!): AuthPayload!
  verifyEmail(token: String!): Boolean!
  resendVerifyEmail: Boolean!
  changePassword(password: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  resetPassword(token: String!, password: String!): Boolean!
  deleteUser(id: Float!): User!
  updateUser(data: UpdateUserInput!): User!
  inviteNewUser(email: String!): User!
  completeInvitation(password: String!, token: String!): AuthPayload!
  deleteTestSession(testSessionId: Float!): TestSession!
  updateTestSession(data: TestSessionDataArgs!, testSessionId: Float!): TestSession!
}

type ProjectSuccess {
  id: ID!
  name: String!
  totalTests: Int!
  failedTests: Int!
}

type Query {
  me: User!
  dashboard: Dashboard
  getSignedUrls(testSessionId: Float!): SignedTestSessionUrls!
  testSession(testSessionId: Float!): TestSession!
  testSessions(where: TestSessionDataArgs): [TestSession!]!
  testSessionsCount(where: TestSessionDataArgs): Int!
}

type RecentTest {
  id: ID!
  name: String!
  success: Boolean!
}

type SignedTestSessionUrls {
  signedImageKey: String
  signedDiffImageKey: String
}

type TestSession {
  id: ID!
  diffImageKey: String
  imageKey: String
  misMatchPercentage: Float
  misMatchTolerance: Float!
  isSameDimensions: Boolean
  state: String!
  stateComment: String
  autoBaseline: Boolean!
}

input TestSessionDataArgs {
  id: ID
  diffImageKey: String
  imageKey: String
  misMatchPercentage: Float
  misMatchTolerance: Float!
  isSameDimensions: Boolean
  state: String!
  stateComment: String
  autoBaseline: Boolean!
}

type TestStatistic {
  countFailedVariations: Int!
  countVariations: Int!
  countWaitingForReview: Int!
}

input UpdateUserInput {
  email: String!
  forename: String
  lastname: String
}

type User {
  id: ID!
  email: String!
  forename: String
  lastname: String
  phoneNumber: String
  active: Boolean!
}
